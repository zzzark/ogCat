#pragma once


static const char* vs =
"#version 450 core                                      \n"
"layout(location = 0) in vec3 position;                 \n"
"layout(location = 1) in vec2 uvcoords;                 \n"
"layout(location = 2) in vec3 normal;                   \n"
"                                                       \n"
"out vec2 v_uv;                                         \n"
"out vec3 v_pos;                                        \n"
"out vec3 v_nml;                                        \n"
"                                                       \n"
"uniform mat4 u_MVP;                                    \n"
"                                                       \n"
"void main()                                            \n"
"{                                                      \n"
"    gl_Position = u_MVP * vec4(position, 1.0f);        \n"
"    v_uv = uvcoords;                                   \n"
"    v_pos = position;                                  \n"
"    v_nml = normal;                                    \n"
"}                                                      \n"
;

static const char* fs =
"#version 450 core                                           \n"
"                                                            \n"
"in vec2 v_uv;                                               \n"
"in vec3 v_pos;                                              \n"
"in vec3 v_nml;                                              \n"
"                                                            \n"
"uniform sampler2D u_tex;                                    \n"
"uniform float u_mipmap_bias;                                \n"
"uniform vec3  u_point;                                      \n"
"uniform float u_luminance;                                  \n"
"uniform float u_exposure;                                   \n"
"                                                            \n"
"layout(location = 0) out vec3 color;                        \n"
"layout(location = 1) out vec3 bloom;                        \n"
"                                                            \n"
"void main()                                                 \n"
"{                                                           \n"
"    vec3 v3_dir = u_point - v_pos;                          \n"
"    float f_dot = dot(normalize(v_nml), v3_dir);            \n"
"    if(f_dot < 0) {                                         \n"
"        color = vec3(0);                                    \n"
"        bloom = vec3(0);                                    \n"
"    } else {                                                \n"
"        float f_len = length(v3_dir);                       \n"
"        f_dot /= f_len * f_len * f_len;                     \n"
"        f_dot *= u_luminance;                               \n"
"        color = vec3(f_dot)                                 \n"
"              * texture(u_tex, v_uv, u_mipmap_bias).xyz;    \n"
"        vec3 col = color - vec3(u_exposure);                \n"
"        if(lessThan(col, vec3(0.0)) == bvec3(1,1,1))        \n"
"            bloom = vec3(0.0);                              \n"
"        else                                                \n"
"            bloom = col / color;                            \n"
"        color = color / (vec3(1.0) + color);                \n"
"    }                                                       \n"
"}                                                           \n"
;

static const char* blit_fs =
"#version 450 core                                                \n"
"in vec2 v_uv;                                                    \n"
"uniform sampler2D u_tex;                                         \n"
"out vec3 color;                                                  \n"
"void main()                                                      \n"
"{                                                                \n"
"    color = texture(u_tex, v_uv).xyz;                            \n"
"}                                                                \n"
;

static const char* blur_h_fs =
"#version 450 core                                                           \n"
"in vec2 v_uv;                                                               \n"
"uniform sampler2D u_tex;                                                    \n"
"uniform float u_width;                                                      \n"
"out vec3 cl;                                                                \n"
"const float kernel[5] =                                                     \n"
"    float[] (0.227027, 0.1945946, 0.1216216, 0.054054, 0.016216);           \n"
"void main()                                                                 \n"
"{                                                                           \n"
"    cl = texture(u_tex, v_uv).xyz * kernel[0];                              \n"
"    for(int i = 1; i <= 4; i++) {                                           \n"
"        cl += texture(u_tex, v_uv + vec2(i/u_width, 0.0)).xyz * kernel[i];  \n"
"        cl += texture(u_tex, v_uv - vec2(i/u_width, 0.0)).xyz * kernel[i];  \n"
"    }                                                                       \n"
"}                                                                           \n"
;
static const char* blur_v_fs =
"#version 450 core                                                           \n"
"in vec2 v_uv;                                                               \n"
"uniform sampler2D u_tex;                                                    \n"
"uniform float u_height;                                                     \n"
"out vec3 cl;                                                                \n"
"const float kernel[5] =                                                     \n"
"    float[] (0.227027, 0.1945946, 0.1216216, 0.054054, 0.016216);           \n"
"void main()                                                                 \n"
"{                                                                           \n"
"    cl = texture(u_tex, v_uv).xyz * kernel[0];                              \n"
"    for(int i = 1; i <= 4; i++) {                                           \n"
"        cl += texture(u_tex, v_uv + vec2(0.0, i/u_height)).xyz * kernel[i]; \n"
"        cl += texture(u_tex, v_uv - vec2(0.0, i/u_height)).xyz * kernel[i]; \n"
"    }                                                                       \n"
"}                                                                           \n"
;

static const char* blend_fs =
"#version 450 core                                      \n"
"in vec2 v_uv;                                          \n"
"uniform sampler2D u_orign;                             \n"
"uniform sampler2D u_bloom;                             \n"
"out vec3 color;                                        \n"
"uniform float u_factor;                                \n"
"void main()                                            \n"
"{                                                      \n"
"    vec3 og = texture(u_orign, v_uv).xyz;              \n"
"    vec3 bm = texture(u_bloom, v_uv).xyz;              \n"
"    color = (og + u_factor * bm);                      \n"
"}                                                      \n"
"                                                       \n"

;


static const char* shadow_blit_fs =
"#version 450 core                                                \n"
"in vec2 v_uv;                                                    \n"
"uniform sampler2D u_tex;                                         \n"
"out vec3 color;                                                  \n"
"void main()                                                      \n"
"{                                                                \n"
"    float fl = texture(u_tex, v_uv).x;                           \n"
"    if(fl == 1.0) color = vec3(0.2, 0.8, 0.8); else color = vec3(fl);      \n"
"}                                                                \n"
;
